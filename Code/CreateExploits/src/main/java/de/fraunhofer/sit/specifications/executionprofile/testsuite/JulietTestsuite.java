package de.fraunhofer.sit.specifications.executionprofile.testsuite;

import java.io.File;
import java.io.IOException;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

import javax.management.RuntimeErrorException;

import org.apache.commons.io.FileUtils;

import de.fraunhofer.sit.specifications.attackoutputs.DummyDatabaseCredentialsOutput;
import de.fraunhofer.sit.specifications.codegen.CodeGenerator;
import de.fraunhofer.sit.specifications.executionprofile.servletadapters.JulietServletAdapter;
import de.fraunhofer.sit.specifications.executionprofile.servletadapters.TestcaseServletAdapter;
import de.fraunhofer.sit.specifications.util.MavenDependencyUtils;
import spoon.reflect.code.CtBlock;

public class JulietTestsuite extends Testsuite {

	@Override
	public List<File> getClasspath() {
		List<File> cp = new ArrayList<>();
		try {
			cp.addAll(MavenDependencyUtils.downloadMavenDependenciesFromProject(new File("../Input/BenchmarkJava/")));
			cp.add(MavenDependencyUtils.downloadMavenArtifact("org.hibernate", "hibernate-validator", "4.3.1.Final"));
		} catch (Exception e) {
			throw new RuntimeException(e);
		}

		return cp;
	}

	@Override
	public Map<String, String> getAdditionalClasses() {
		Map<String, String> cls = new HashMap<>();
		try {
			cls.put("de.fraunhofer.sit.runexploits.environment.OWASPEnvironment", 
					FileUtils.readFileToString(
							new File("../RunExploits/src/main/java/de/fraunhofer/sit/runexploits/environment/OWASPEnvironment.java")));

			cls.put("de.fraunhofer.sit.runexploits.database.JulietDummyDriver", 
					FileUtils.readFileToString(
							new File("../Runtime/src/de/fraunhofer/sit/runexploits/database/JulietDummyDriver.java")));
			cls.put("de.fraunhofer.sit.runexploits.database.EmptyResultSet", 
					FileUtils.readFileToString(
							new File("../Runtime/src/de/fraunhofer/sit/runexploits/database/EmptyResultSet.java")));
			cls.put("de.fraunhofer.sit.runexploits.database.DummyPreparedStatement", 
					FileUtils.readFileToString(
							new File("../Runtime/src/de/fraunhofer/sit/runexploits/database/DummyPreparedStatement.java")));
			cls.put("de.fraunhofer.sit.runexploits.database.DummyConnection", 
					FileUtils.readFileToString(
							new File("../Runtime/src/de/fraunhofer/sit/runexploits/database/DummyConnection.java")));
			
		} catch (IOException e) {
			throw new RuntimeException(e);
		}
		
		
		return cls;
	}

	@Override
	public TestcaseServletAdapter getTestcaseServletAdapter() {
		return new JulietServletAdapter();
	}
	@Override
	public String getName() {
		return "juliet";
	}

	@Override
	public Map<String, String> getAdditionalFiles() {
		HashMap<String, String> files = new HashMap<>();
		File resources = new File("../Input/BenchmarkJava/src/main/resources");
		for (File f : resources.listFiles()) {
			try {
				String c = FileUtils.readFileToString(f);
				files.put("WEB-INF/classes/"+f.getName(), c);
				files.put("bin/"+f.getName(), c);
				files.put(f.getName(), c);
			} catch (IOException e) {
				throw new RuntimeException(e);
			}
		}
		return files;
	}
	
}
