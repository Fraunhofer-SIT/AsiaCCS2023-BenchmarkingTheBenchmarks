package de.fraunhofer.sit.specifications.attackpatterns;

import java.util.HashMap;
import java.util.Map;

import org.w3c.dom.Document;
import org.w3c.dom.Node;

import de.fraunhofer.sit.specifications.util.IXMLReadable;
import de.fraunhofer.sit.specifications.util.Registration;
import de.fraunhofer.sit.specifications.util.XMLUtils;

public class Presets {
	Map<String, AttackPattern> patterns = new HashMap<>();
	
	public static Presets load(Document presets) {
		Presets pr = new Presets();
		Node s = XMLUtils.getFirstChildNodeByName(presets, "Presets");
		for (Node pattern : XMLUtils.getXMLIterator(s.getChildNodes())) {
			AttackPattern p = new AttackPattern();
			p.readIn(pattern);
			AttackPattern x = pr.patterns.putIfAbsent(p.id.toLowerCase(), p);
			if (x != null)
				throw new RuntimeException("Duplicate: " + p.id + " vs " + x.id);
		}
		
		return pr;
	}

	public AttackPattern getPattern(String id) {
		AttackPattern p = patterns.get(id.toLowerCase());
		if (p == null)
			throw new RuntimeException("Unknown pattern: " + id);
		return p;
	}

}
