package de.fraunhofer.sit.specifications.exploitcheckers;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import java.util.Timer;
import java.util.TimerTask;

import org.w3c.dom.Node;

import de.fraunhofer.sit.specifications.codegen.CodeGenerator;
import de.fraunhofer.sit.specifications.testcases.TestCase;

public class OutputTimeout extends SuccessfulExploitIndicator {
	public static class Template {
		// this field will be set by processOutput() if a timeout occurred
		static boolean outputTimedout = false;

		public static boolean checkOutput() {
			return outputTimedout;
		}

	
	}

	@Override
	public void generateCode(TestCase testcase, CodeGenerator generator) {
		generator.merge(Template.class, getFieldRenames());
	}

	@Override
	public String getTagName() {

		return "OutputTimeout";
	}

	@Override
	public void readIn(Node node) {
		
	}

	@Override
	public Map<String, String> getFieldRenames() {
		Map<String, String> fields = new HashMap<>();
		fields.put("outputTimedout", "outputTimedout");
		return fields;
	}

	@Override
	public List<Object> getParameterValues() {
		List<Object> params = new ArrayList<>();
		return params;
	}
	

}
