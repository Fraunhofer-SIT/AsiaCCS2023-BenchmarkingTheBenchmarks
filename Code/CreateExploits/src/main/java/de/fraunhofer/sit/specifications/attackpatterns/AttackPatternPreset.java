package de.fraunhofer.sit.specifications.attackpatterns;

import java.util.ArrayList;
import java.util.List;

import org.codehaus.plexus.util.xml.XmlUtil;
import org.w3c.dom.Node;

import de.fraunhofer.sit.specifications.attackinputs.InputDataAssignment;
import de.fraunhofer.sit.specifications.exploitcheckers.SuccessfulExploitIndicator;
import de.fraunhofer.sit.specifications.util.IXMLReadable;
import de.fraunhofer.sit.specifications.util.Registration;
import de.fraunhofer.sit.specifications.util.XMLUtils;

public class AttackPatternPreset implements IXMLReadable {

	public List<InputDataAssignment> inputParameterAssignments = new ArrayList<>();
	public List<SuccessfulExploitIndicator> successfulAttackIndicators = new ArrayList<>();
	public String id;
	public RepeatInput repeatInput;
	@Override
	public String getTagName() {
		return "AttackPatternPreset";
	}

	@Override
	public void readIn(Node node) {
		Node attackIndicatorsNode = XMLUtils.getFirstChildNodeByName(node, "SuccessfulAttackIndicators");
		id = XMLUtils.getAttributeValue(node, "id");
		readChildsIntoCollection(attackIndicatorsNode, successfulAttackIndicators);
		readChildsIntoCollection(XMLUtils.getFirstChildNodeByName(node, "InputParameterAssignments"), inputParameterAssignments);
		Node repeat = XMLUtils.getFirstChildNodeByName(node, "RepeatInput");
		if (repeat != null) {
			repeatInput = readChildIn(repeat);
		}
	}

}
