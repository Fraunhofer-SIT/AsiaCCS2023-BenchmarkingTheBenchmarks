package de.fraunhofer.sit.specifications.attackinputs;

import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStream;
import java.io.InputStreamReader;
import java.io.OutputStream;
import java.util.ArrayList;
import java.util.List;

import org.codehaus.plexus.util.xml.XmlUtil;
import org.w3c.dom.Node;

import de.fraunhofer.sit.specifications.codegen.CodeGenerator;
import de.fraunhofer.sit.specifications.data.Data;
import de.fraunhofer.sit.specifications.testcases.TestCase;
import de.fraunhofer.sit.specifications.util.XMLUtils;

/**
 * Testcase does not have any inputs and starting it with the execution profile is enough to detect vulnerability,
 * This means that no actual exploit is needed.
 * @author naeumann
 *
 */
public class NoInput extends Input {
	
	
	public  class Template {
		

		
		static void attackStep() {
		}
	}
	
	@Override
	public void generateCode(TestCase testcase, CodeGenerator generator) {
		generator.merge(Template.class, getFieldRenames());
	}

	@Override
	public String getTagName() {
		return "NoInput";
	}

	@Override
	public void readIn(Node node) {
	}

	@Override
	public List<Object> getParameterValues() {
		List<Object> l = new ArrayList<>();
		return l;
	}

	@Override
	boolean isPreLaunch() {
		return false;
	}

}
