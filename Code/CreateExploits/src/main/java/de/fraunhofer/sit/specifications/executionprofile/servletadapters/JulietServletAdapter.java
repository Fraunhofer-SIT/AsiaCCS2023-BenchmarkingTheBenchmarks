package de.fraunhofer.sit.specifications.executionprofile.servletadapters;

import java.io.File;
import java.io.IOException;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

import org.apache.commons.io.FileUtils;

import de.fraunhofer.sit.specifications.attackoutputs.DummyDatabaseCredentialsOutput;
import de.fraunhofer.sit.specifications.executionprofile.servletcontainers.ServletExecutionProfile;
import de.fraunhofer.sit.specifications.testcases.TestCase;
import de.fraunhofer.sit.specifications.util.MavenDependencyUtils;

public class JulietServletAdapter extends TestcaseServletAdapter {

	@Override
	public Map<String, String> getServletClasses(ServletExecutionProfile profile, TestCase testcase) {
		String classname = profile.classname;
		String shortName = testcase.key;
		String clsName = "de.fraunhofer.sit.testcodehelpers.WrapperServlet_" + shortName;
		String methodExecutorClassString = "package de.fraunhofer.sit.testcodehelpers;\n"
				+ "@javax.servlet.annotation.WebServlet(\"%s\")\n"
				+ "public class WrapperServlet_%s extends javax.servlet.http.HttpServlet {\n"
				+ "		\n"
				+ "		public void doGet(javax.servlet.http.HttpServletRequest request, "
				+ "            javax.servlet.http.HttpServletResponse response) {\n"
				+ "			try {\n"
				+ "				new %s().%s(request, response);\n"
				+ "			} catch (Throwable t) {\n"
				+ "				t.printStackTrace();\n"
				+ "			}\n"
				+ "		}\n"
				+ "		public void doPost(javax.servlet.http.HttpServletRequest request, "
				+ "            javax.servlet.http.HttpServletResponse response) {\n"
				+ "			try {\n"
				+ "				new %s().%s(request, response);\n"
				+ "			} catch (Throwable t) {\n"
				+ "				t.printStackTrace();\n"
				+ "			}\n"
				+ "		}\n"
				+ "	}";
		
		String executorClass = String.format(methodExecutorClassString, profile.path, shortName, classname, profile.methodname, classname, profile.methodname);
		
		
		
		Map<String, String> cls = new HashMap<>();
		cls.put(clsName, executorClass);
		

		
		return cls;
	}

	@Override
	public List<File> getClasspath() {
		List<File> cp = new ArrayList<>();
		try {
			cp.add(MavenDependencyUtils.downloadMavenArtifact("org.jsoup","jsoup","1.13.1"));
			cp.add(MavenDependencyUtils.downloadMavenArtifact("org.xerial","sqlite-jdbc","3.34.0"));
		} catch (Exception e) {
			throw new RuntimeException(e);
		}
		return cp;
	}
	@Override
	public Map<String, String> getServletPaths(ServletExecutionProfile profile, TestCase testcase) {
		Map<String, String> paths = new HashMap<>();
		paths.put(profile.path, "de.fraunhofer.sit.testcodehelpers.WrapperServlet_" + testcase.key);
		return paths;
	}
	@Override
	public String getInitializationCode() {
		return "new de.fraunhofer.sit.runexploits.environment.OWASPEnvironment();\n"
				+ "listeners.add(new org.owasp.benchmark.helpers.Startup());";
	}
}
