package de.fraunhofer.sit.specifications.attackinputs;

import java.io.File;
import java.io.FileOutputStream;
import java.io.IOException;
import java.nio.file.Files;
import java.nio.file.Path;
import java.nio.file.Paths;
import java.nio.file.StandardOpenOption;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import java.util.Properties;

import org.apache.maven.shared.invoker.SystemOutHandler;
import org.w3c.dom.Node;

import de.fraunhofer.sit.specifications.attackinputs.FileRead.Template;
import de.fraunhofer.sit.specifications.codegen.CodeGenerator;
import de.fraunhofer.sit.specifications.data.Data;
import de.fraunhofer.sit.specifications.testcases.TestCase;
import de.fraunhofer.sit.specifications.util.XMLUtils;

public class PropertiesFileParameter extends Input {

	public String path;

	public String key;

	public String value;
	
	public class Template {
		public static void attackStep(String filepath, String key, String value) throws IOException {
			Path p = Paths.get(filepath);
			File f = p.toFile();
			p.getParent().toFile().mkdirs();
			if (f.exists()) {
				f.delete();
			}
			Properties prop = new Properties();
			prop.put(key, value);
			prop.store(new FileOutputStream(f), "this is a property list");
			System.out.println(String.format("[PropertiesFileParameter] writing %s=%s to %s", key, value.replace("\r", "[\\r]"), filepath));
		}
	}
	@Override
	public void generateCode(TestCase testcase, CodeGenerator generator) {
		generator.merge(Template.class, getFieldRenames());
	}

	@Override
	public String getTagName() {
		return "PropertiesFileParameter";
	}

	@Override
	public void readIn(Node node) {
		path = XMLUtils.getAttributeValue(node, "path");
		key = XMLUtils.getAttributeValue(node, "key");
		value = node.getTextContent();
	}

	@Override
	public List<Object> getParameterValues() {
		// TODO Auto-generated method stub
		List<Object> l = new ArrayList<>();
		l.add(path);
		l.add(key);
		l.add(value);
		return l;
	}
	@Override
	public Map<String, String> getFieldRenames() {
		Map<String, String> fields = new HashMap<>();
		return fields;
	}
	@Override
	boolean isPreLaunch() {
		// TODO Auto-generated method stub
		return false;
	}

}
