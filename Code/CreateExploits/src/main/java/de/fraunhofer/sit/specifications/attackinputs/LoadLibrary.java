package de.fraunhofer.sit.specifications.attackinputs;

import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStream;
import java.io.InputStreamReader;
import java.io.OutputStream;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import java.util.concurrent.Phaser;

import org.codehaus.plexus.util.xml.XmlUtil;
import org.w3c.dom.Node;

import de.fraunhofer.sit.specifications.codegen.CodeGenerator;
import de.fraunhofer.sit.specifications.data.Data;
import de.fraunhofer.sit.specifications.testcases.TestCase;
import de.fraunhofer.sit.specifications.util.XMLUtils;

public class LoadLibrary extends Input {
	
	public String path;
	
	public  class Template {
		static void attackStep(){
			
		}
	}
	
	@Override
	public void generateCode(TestCase testcase, CodeGenerator generator) {
		generator.merge(Template.class, getFieldRenames());
	}

	@Override
	public String getTagName() {
		return "LoadLibrary";
	}

	@Override
	public void readIn(Node node) {
		path = XMLUtils.getAttributeValue(node, "path");
	}

	@Override
	public Map<String, String> getFieldRenames() {
		Map<String, String> renames = new HashMap<>();
		return renames;
	}
	
	@Override
	public List<Object> getParameterValues() {
		List<Object> l = new ArrayList<>();
		return l;
	}

	@Override
	boolean isPreLaunch() {
		// TODO Auto-generated method stub
		return false;
	}

}
