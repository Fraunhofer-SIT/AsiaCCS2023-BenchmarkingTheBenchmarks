package de.fraunhofer.sit.specifications.attackoutputs;

import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStream;
import java.io.InputStreamReader;
import java.net.HttpURLConnection;
import java.net.URL;
import java.util.HashMap;
import java.util.Map;
import java.util.stream.Collectors;

import org.codehaus.plexus.util.xml.XmlUtil;
import org.w3c.dom.Node;

import de.fraunhofer.sit.specifications.codegen.CodeGenerator;
import de.fraunhofer.sit.specifications.testcases.TestCase;
import de.fraunhofer.sit.specifications.util.XMLUtils;

public class URLRequestResponseCookie extends Output {
	// the urlrequest for which we want to get a response.
	// the generator of URLRequest will store a HttpConnection in a field with this id.
	String reference;

	String destination;
	public  class Template {
		
		static HttpURLConnection urlrequest_x;
		
		static String programOutput = "";

		public static void processOutput() throws IOException {
			System.out.println("[URLREQUESTRESPONSE] " + urlrequest_x.getHeaderFields().toString());

			String cookie = urlrequest_x.getHeaderField("Set-Cookie");
			System.out.println("[URLREQUESTRESPONSECOOKIE] " + cookie);
			programOutput += cookie;
		}
	}

	@Override
	public void generateCode(TestCase testcase, CodeGenerator generator) {
		generator.merge(Template.class, getFieldRenames());
	}

	@Override
	public Map<String, String> getFieldRenames() {
		Map<String,String> fields = new HashMap<>();
		fields.put("urlrequest_x", reference);
		fields.put("programOutput", destination);
		return fields;
	}

	@Override
	public String getTagName() {
		// TODO Auto-generated method stub
		return "URLRequestResponseCookie";
	}

	@Override
	public void readIn(Node node) {
		reference = XMLUtils.getAttributeValue(node, "reference");
		destination = XMLUtils.getAttributeValue(node, "destination", "programOutput");
	}


}
